{"version":4,"terraform_version":"1.10.5","serial":12,"lineage":"45249049-5f91-55c3-828e-995b6dba01b3","outputs":{},"resources":[{"mode":"managed","type":"helm_release","name":"jenkins","provider":"provider[\"registry.opentofu.org/hashicorp/helm\"]","instances":[{"schema_version":1,"attributes":{"atomic":false,"chart":"jenkins","cleanup_on_fail":false,"create_namespace":false,"dependency_update":false,"description":null,"devel":null,"disable_crd_hooks":false,"disable_openapi_validation":false,"disable_webhooks":false,"force_update":false,"id":"jenkins","keyring":null,"lint":false,"manifest":null,"max_history":0,"metadata":[{"app_version":"2.375.2","chart":"jenkins","first_deployed":1754369565,"last_deployed":1754369565,"name":"jenkins","namespace":"infrastructure","notes":"1. Get your 'admin' user password by running:\n  kubectl exec --namespace infrastructure -it svc/jenkins -c jenkins -- /bin/cat /run/secrets/additional/chart-admin-password \u0026\u0026 echo\n2. Get the Jenkins URL to visit by running these commands in the same shell:\n  export NODE_PORT=$(kubectl get --namespace infrastructure -o jsonpath=\"{.spec.ports[0].nodePort}\" services jenkins)\n  export NODE_IP=$(kubectl get nodes --namespace infrastructure -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n  echo http://$NODE_IP:$NODE_PORT\n\n3. Login with the password from step 1 and the username: admin\n4. Configure security realm and authorization strategy\n5. Use Jenkins Configuration as Code by specifying configScripts in your values.yaml file, see documentation: http://$NODE_IP:$NODE_PORT/configuration-as-code and examples: https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos\n\nFor more information on running Jenkins on Kubernetes, visit:\nhttps://cloud.google.com/solutions/jenkins-on-container-engine\n\nFor more information about Jenkins Configuration as Code, visit:\nhttps://jenkins.io/projects/jcasc/\n\n\nNOTE: Consider using a custom image with pre-installed plugins\n","revision":1,"values":"{\"controller\":{\"JCasC\":{\"configScripts\":{\"main-config\":\"jenkins:\\n  systemMessage: \\\"Deployment System Jenkins\\\"\\n  numExecutors: 2\\n  securityRealm:\\n    local:\\n      allowsSignup: false\\n\\nunclassified:\\n  prometheus:\\n    path: \\\"/prometheus\\\"\\n\\njobs:\\n  - script: \\u003e\\n      pipelineJob('sample-app-pipeline') {\\n        definition {\\n          cpsScm {\\n            scm {\\n              git {\\n                remote {\\n                  url('https://github.com/your-org/sample-app.git')\\n                }\\n                branch('*/main')\\n              }\\n            }\\n            scriptPath('Jenkinsfile')\\n          }\\n        }\\n      }\\n\"},\"defaultConfig\":true},\"adminPassword\":\"admin123\",\"adminUser\":\"admin\",\"image\":\"jenkins/jenkins\",\"installPlugins\":[\"kubernetes:latest\",\"git:latest\",\"prometheus:latest\",\"pipeline-stage-view:latest\"],\"nodePort\":32000,\"prometheus\":{\"enabled\":true,\"serviceMonitorNamespace\":\"infrastructure\"},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"512Mi\"}},\"serviceType\":\"NodePort\",\"tag\":\"lts\"},\"persistence\":{\"enabled\":true,\"size\":\"10Gi\"},\"rbac\":{\"create\":true,\"readSecrets\":true},\"serviceAccount\":{\"create\":true}}","version":"4.3.0"}],"name":"jenkins","namespace":"infrastructure","pass_credentials":false,"postrender":[],"recreate_pods":false,"render_subchart_notes":true,"replace":false,"repository":"https://charts.jenkins.io","repository_ca_file":null,"repository_cert_file":null,"repository_key_file":null,"repository_password":null,"repository_username":null,"reset_values":false,"reuse_values":false,"set":[],"set_list":[],"set_sensitive":[],"skip_crds":false,"status":"deployed","timeout":12000,"upgrade_install":null,"values":["controller:\n  image: \"jenkins/jenkins\"\n  tag: \"lts\"\n  \n  adminUser: \"admin\"\n  adminPassword: \"admin123\"\n  \n  resources:\n    requests:\n      cpu: \"200m\"\n      memory: \"512Mi\"\n    limits:\n      cpu: \"500m\"\n      memory: \"1Gi\"\n  \n  serviceType: NodePort\n  nodePort: 32000\n  \n  installPlugins:\n    - kubernetes:latest\n    # - workflow-aggregator:latest\n    - git:latest\n    # - configuration-as-code:latest\n    - prometheus:latest\n    - pipeline-stage-view:latest\n    # - blueocean:latest\n    # - docker-workflow:latest\n    # - helm:latest\n    # - kubernetes-cli:latest\n    # - pipeline-utility-steps:latest\n  \n  JCasC:\n    defaultConfig: true\n    configScripts:\n      main-config: |\n        jenkins:\n          systemMessage: \"Deployment System Jenkins\"\n          numExecutors: 2\n          securityRealm:\n            local:\n              allowsSignup: false\n        \n        unclassified:\n          prometheus:\n            path: \"/prometheus\"\n        \n        jobs:\n          - script: \u003e\n              pipelineJob('sample-app-pipeline') {\n                definition {\n                  cpsScm {\n                    scm {\n                      git {\n                        remote {\n                          url('https://github.com/your-org/sample-app.git')\n                        }\n                        branch('*/main')\n                      }\n                    }\n                    scriptPath('Jenkinsfile')\n                  }\n                }\n              }\n\n  prometheus:\n    enabled: true\n    serviceMonitorNamespace: \"infrastructure\"\n\npersistence:\n  enabled: true\n  size: \"10Gi\"\n\nrbac:\n  create: true\n  readSecrets: true\n\nserviceAccount:\n  create: true"],"verify":false,"version":"4.3.0","wait":true,"wait_for_jobs":false},"sensitive_attributes":[[{"type":"get_attr","value":"repository_password"}]],"private":"eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==","dependencies":["helm_release.prometheus","kubernetes_namespace.infrastructure"]}]},{"mode":"managed","type":"helm_release","name":"prometheus","provider":"provider[\"registry.opentofu.org/hashicorp/helm\"]","instances":[{"schema_version":1,"attributes":{"atomic":false,"chart":"kube-prometheus-stack","cleanup_on_fail":false,"create_namespace":false,"dependency_update":false,"description":null,"devel":null,"disable_crd_hooks":false,"disable_openapi_validation":false,"disable_webhooks":false,"force_update":false,"id":"prometheus","keyring":null,"lint":false,"manifest":null,"max_history":0,"metadata":[{"app_version":"v0.68.0","chart":"kube-prometheus-stack","first_deployed":1754367073,"last_deployed":1754367073,"name":"prometheus","namespace":"infrastructure","notes":"1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace infrastructure -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace infrastructure $POD_NAME 9100\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace infrastructure prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.infrastructure.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export NODE_PORT=$(kubectl get --namespace infrastructure -o jsonpath=\"{.spec.ports[0].nodePort}\" services prometheus-grafana)\n     export NODE_IP=$(kubectl get nodes --namespace infrastructure -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n     echo http://$NODE_IP:$NODE_PORT\n\n3. Login with the password from step 1 and the username: admin\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.infrastructure.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace infrastructure get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n","revision":1,"values":"{\"alertmanager\":{\"alertmanagerSpec\":{\"storage\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"2Gi\"}}}}}}},\"grafana\":{\"adminPassword\":\"admin\",\"datasources\":{\"datasources.yaml\":{\"apiVersion\":1,\"datasources\":[{\"access\":\"proxy\",\"isDefault\":true,\"name\":\"Prometheus\",\"type\":\"prometheus\",\"url\":\"http://prometheus-kube-prometheus-prometheus:9090\"}]}},\"persistence\":{\"enabled\":true,\"size\":\"5Gi\"},\"service\":{\"nodePort\":30000,\"type\":\"NodePort\"},\"sidecar\":{\"dashboards\":{\"enabled\":true,\"searchNamespace\":\"ALL\"}}},\"kubeStateMetrics\":{\"enabled\":true},\"nodeExporter\":{\"enabled\":true},\"prometheus\":{\"prometheusSpec\":{\"retention\":\"30d\",\"ruleSelector\":{},\"serviceMonitorSelector\":{},\"serviceMonitorSelectorNilUsesHelmValues\":false,\"storageSpec\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"10Gi\"}}}}}}},\"prometheusOperator\":{\"enabled\":true}}","version":"51.0.0"}],"name":"prometheus","namespace":"infrastructure","pass_credentials":false,"postrender":[],"recreate_pods":false,"render_subchart_notes":true,"replace":false,"repository":"https://prometheus-community.github.io/helm-charts","repository_ca_file":null,"repository_cert_file":null,"repository_key_file":null,"repository_password":null,"repository_username":null,"reset_values":false,"reuse_values":false,"set":[],"set_list":[],"set_sensitive":[],"skip_crds":false,"status":"deployed","timeout":900,"upgrade_install":null,"values":["prometheus:\n  prometheusSpec:\n    serviceMonitorSelectorNilUsesHelmValues: false\n    serviceMonitorSelector: {}\n    ruleSelector: {}\n    retention: 30d\n    storageSpec:\n      volumeClaimTemplate:\n        spec:\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 10Gi\n\ngrafana:\n  adminPassword: admin\n  service:\n    type: NodePort\n    nodePort: 30000\n  persistence:\n    enabled: true\n    size: 5Gi\n  sidecar:\n    dashboards:\n      enabled: true\n      searchNamespace: ALL\n  datasources:\n    datasources.yaml:\n      apiVersion: 1\n      datasources:\n      - name: Prometheus\n        type: prometheus\n        url: http://prometheus-kube-prometheus-prometheus:9090\n        access: proxy\n        isDefault: true\n\nalertmanager:\n  alertmanagerSpec:\n    storage:\n      volumeClaimTemplate:\n        spec:\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 2Gi\n\nkubeStateMetrics:\n  enabled: true\n\nnodeExporter:\n  enabled: true\n\nprometheusOperator:\n  enabled: true\n"],"verify":false,"version":"51.0.0","wait":true,"wait_for_jobs":false},"sensitive_attributes":[[{"type":"get_attr","value":"repository_password"}]],"private":"eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==","dependencies":["kubernetes_namespace.infrastructure"]}]},{"mode":"managed","type":"kubernetes_config_map","name":"grafana_dashboards","provider":"provider[\"registry.opentofu.org/hashicorp/kubernetes\"]","instances":[{"schema_version":0,"attributes":{"binary_data":{},"data":{"application-metrics.json":"{\n  \"dashboard\": {\n    \"id\": null,\n    \"title\": \"Application Metrics\",\n    \"tags\": [\"applications\"],\n    \"style\": \"dark\",\n    \"timezone\": \"browser\",\n    \"panels\": [\n      {\n        \"id\": 1,\n        \"title\": \"HTTP Requests per Second\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_requests_total[5m])\",\n            \"legendFormat\": \"{{method}} {{status}}\"\n          }\n        ],\n        \"xAxis\": {\n          \"show\": true\n        },\n        \"yAxes\": [\n          {\n            \"label\": \"requests/sec\",\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 0,\n          \"y\": 0\n        }\n      },\n      {\n        \"id\": 2,\n        \"title\": \"Response Time (95th percentile)\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))\",\n            \"legendFormat\": \"95th percentile\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"seconds\",\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 12,\n          \"y\": 0\n        }\n      },\n      {\n        \"id\": 3,\n        \"title\": \"Application Pod CPU Usage\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(container_cpu_usage_seconds_total{namespace=\\\"applications\\\"}[5m]) * 100\",\n            \"legendFormat\": \"{{pod}}\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"CPU %\",\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 0,\n          \"y\": 8\n        }\n      },\n      {\n        \"id\": 4,\n        \"title\": \"Application Pod Memory Usage\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"container_memory_usage_bytes{namespace=\\\"applications\\\"} / 1024 / 1024\",\n            \"legendFormat\": \"{{pod}}\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"Memory (MB)\",\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 12,\n          \"y\": 8\n        }\n      }\n    ],\n    \"time\": {\n      \"from\": \"now-1h\",\n      \"to\": \"now\"\n    },\n    \"refresh\": \"30s\"\n  }\n}\n","infrastructure-metrics.json":"{\n  \"dashboard\": {\n    \"id\": null,\n    \"title\": \"Infrastructure Metrics\",\n    \"tags\": [\"infrastructure\"],\n    \"style\": \"dark\",\n    \"timezone\": \"browser\",\n    \"panels\": [\n      {\n        \"id\": 1,\n        \"title\": \"Cluster CPU Usage\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"100 - (avg(irate(node_cpu_seconds_total{mode=\\\"idle\\\"}[5m])) * 100)\",\n            \"legendFormat\": \"CPU Usage %\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"CPU %\",\n            \"max\": 100,\n            \"min\": 0,\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 0,\n          \"y\": 0\n        }\n      },\n      {\n        \"id\": 2,\n        \"title\": \"Cluster Memory Usage\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100\",\n            \"legendFormat\": \"Memory Usage %\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"Memory %\",\n            \"max\": 100,\n            \"min\": 0,\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 12,\n          \"y\": 0\n        }\n      },\n      {\n        \"id\": 3,\n        \"title\": \"Pod Count by Namespace\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"count by (namespace) (kube_pod_info)\",\n            \"legendFormat\": \"{{namespace}}\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"Pod Count\",\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 0,\n          \"y\": 8\n        }\n      },\n      {\n        \"id\": 4,\n        \"title\": \"Disk Usage\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"100 - ((node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes)\",\n            \"legendFormat\": \"Disk Usage %\"\n          }\n        ],\n        \"yAxes\": [\n          {\n            \"label\": \"Disk %\",\n            \"max\": 100,\n            \"min\": 0,\n            \"show\": true\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 12,\n          \"y\": 8\n        }\n      }\n    ],\n    \"time\": {\n      \"from\": \"now-1h\",\n      \"to\": \"now\"\n    },\n    \"refresh\": \"30s\"\n  }\n}\n"},"id":"infrastructure/custom-dashboards","immutable":false,"metadata":[{"annotations":{},"generate_name":"","generation":0,"labels":{"grafana_dashboards":"1"},"name":"custom-dashboards","namespace":"infrastructure","resource_version":"21385","uid":"8a88ab04-5c17-41e8-a137-989b430e5617"}]},"sensitive_attributes":[],"private":"bnVsbA==","dependencies":["helm_release.prometheus","kubernetes_namespace.infrastructure"]}]},{"mode":"managed","type":"kubernetes_namespace","name":"applications","provider":"provider[\"registry.opentofu.org/hashicorp/kubernetes\"]","instances":[{"schema_version":0,"attributes":{"id":"applications","metadata":[{"annotations":{},"generate_name":"","generation":0,"labels":{},"name":"applications","resource_version":"19616","uid":"40a36d78-f3fc-42e9-b65a-093c4707bce9"}],"timeouts":null,"wait_for_default_service_account":false},"sensitive_attributes":[],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="}]},{"mode":"managed","type":"kubernetes_namespace","name":"infrastructure","provider":"provider[\"registry.opentofu.org/hashicorp/kubernetes\"]","instances":[{"schema_version":0,"attributes":{"id":"infrastructure","metadata":[{"annotations":{},"generate_name":"","generation":0,"labels":{},"name":"infrastructure","resource_version":"19615","uid":"7d15c48f-ab05-4207-a83c-d05bdc55944f"}],"timeouts":null,"wait_for_default_service_account":false},"sensitive_attributes":[],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="}]}],"check_results":null}
